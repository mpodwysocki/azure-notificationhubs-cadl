import "@cadl-lang/rest";

using Cadl.Rest;

namespace NotificationHubs.Models;

@discriminator("type")
model RegistrationDescription {
  registrationId?: string;
  tags?: string;
  etag?: string;
  pushVariables?: Record<string>;
  expirationTime?: plainDate;
}

model AdmRegistrationDescription extends RegistrationDescription {
  admRegistrationId: string;
  type: "adm";
}

model AdmTemplateRegistrationDescription extends RegistrationDescription {
  admRegistrationId: string;
  bodyTemplate: string;
  templateName?: string;
  type: "admTemplate";
}

model AppleRegistrationDescription extends RegistrationDescription {
  deviceToken: string;
  type: "apple";
}

model AppleTemplateRegistrationDescription extends RegistrationDescription {
  deviceToken: string;
  bodyTemplate: string;
  templateName?: string;
  apnsHeaders?: Record<string>;
  priority?: int32;
  type: "appleTemplate";
}

model BaiduRegistrationDescription extends RegistrationDescription {
  baiduChannelId: string;
  baiduUserId: string;
  type: "baidu";
}

model BaiduTemplateRegistrationDescription extends RegistrationDescription {
  baiduChannelId: string;
  baiduUserId: string;
  bodyTemplate: string;
  templateName?: string;
  type: "baiduTemplate";
}

model BrowserRegistrationDescription extends RegistrationDescription {
  endpoint: string;
  auth: string;
  p256dh: string;
  type: "browser";
}

model BrowserTemplateRegistrationDescription extends RegistrationDescription {
  bodyTemplate: string;
  templateName?: string;
  type: "browserTemplate";
}

model GcmRegistrationDescription extends RegistrationDescription {
  gcmRegistrationId: string;
  type: "gcm";
}

model GcmTemplateRegistrationDescription extends RegistrationDescription {
  gcmRegistrationId: string;
  bodyTemplate: string;
  templateName?: string;
  type: "gcmTemplate";
}

model MpnsRegistrationDescription extends RegistrationDescription {
  channelUri: string;
  type: "mpns";
}

model MpnsTemplateRegistrationDescription extends RegistrationDescription {
  channelUri: string;
  bodyTemplate: string;
  templateName?: string;
  mpnsHeaders?: Record<string>;
  type: "mpnsTemplate";
}

model WindowsRegistrationDescription extends RegistrationDescription {
  channelUri: string;
  type: "windows";
}

model WindowsTemplateRegistrationDescription extends RegistrationDescription {
  channelUri: string;
  bodyTemplate: string;
  templateName?: string;
  wnsHeaders?: Record<string>;
  type: "windowsTemplate"
}
