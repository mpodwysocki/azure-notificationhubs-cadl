// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace NotificationHubs.Models
{
    /// <summary> Represents the notification outcome. </summary>
    public partial class NotificationOutcome
    {
        /// <summary> Initializes a new instance of NotificationOutcome. </summary>
        /// <param name="success"></param>
        /// <param name="failure"></param>
        /// <param name="results"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="results"/> is null. </exception>
        public NotificationOutcome(int success, int failure, IEnumerable<RegistrationResult> results)
        {
            Argument.AssertNotNull(results, nameof(results));

            Success = success;
            Failure = failure;
            Results = results.ToList();
        }
        /// <summary> Initializes a new instance of NotificationOutcome. </summary>
        /// <param name="success"></param>
        /// <param name="failure"></param>
        /// <param name="results"></param>
        internal NotificationOutcome(int success, int failure, IList<RegistrationResult> results)
        {
            Success = success;
            Failure = failure;
            Results = results;
        }

        public int Success { get; set; }

        public int Failure { get; set; }

        public IList<RegistrationResult> Results { get; }
    }
}
