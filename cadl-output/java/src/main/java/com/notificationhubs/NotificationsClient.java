// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.notificationhubs;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;

/** Initializes a new instance of the synchronous AzureNotificationHubsServiceClient type. */
@ServiceClient(builder = NotificationsClientBuilder.class)
public final class NotificationsClient {
    @Generated private final NotificationsAsyncClient client;

    /**
     * Initializes an instance of NotificationsClient class.
     *
     * @param client the async client.
     */
    @Generated
    NotificationsClient(NotificationsAsyncClient client) {
        this.client = client;
    }

    /**
     * Send a notification using Azure Notification Hubs.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>direct</td><td>Boolean</td><td>No</td><td>Direct send operation</td></tr>
     * </table>
     *
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     *
     * <p><strong>Header Parameters</strong>
     *
     * <table border="1">
     *     <caption>Header Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>ServiceBusNotification-DeviceHandle</td><td>String</td><td>No</td><td>The notification target device handle</td></tr>
     *     <tr><td>ServiceBusNotification-Tags</td><td>String</td><td>No</td><td>The notification target tag expression</td></tr>
     * </table>
     *
     * You can add these to a request with {@link RequestOptions#addHeader}
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * String
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     success: int (Required)
     *     failure: int (Required)
     *     results (Required): [
     *          (Required){
     *             applicationPlatform: String (Required)
     *             pnsHandle: String (Required)
     *             registrationId: String (Required)
     *             outcome: String (Required)
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param test Enables test send for debug purposes.
     * @param serviceBusNotificationFormat The notification target platform.
     * @param notification The notification to send.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return represents the notification outcome along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> sendNotificationWithResponse(
            boolean test, String serviceBusNotificationFormat, BinaryData notification, RequestOptions requestOptions) {
        return this.client
                .sendNotificationWithResponse(test, serviceBusNotificationFormat, notification, requestOptions)
                .block();
    }
}
